/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/bt.h>

/*                                      42 KEY MATRIX / LAYOUT MAPPING

  ╭────────────────────────┬────────────────────────╮ ╭─────────────────────────┬─────────────────────────╮
  │  0   1   2   3   4   5 │  6   7   8   9  10  11 │ │ LT5 LT4 LT3 LT2 LT1 LT0 │ RT0 RT1 RT2 RT3 RT4 RT5 │
  │ 12  13  14  15  16  17 │ 18  19  20  21  22  23 │ │ LM5 LM4 LM3 LM2 LM1 LM0 │ RM0 RM1 RM2 RM3 RM4 RM5 │
  │ 24  25  26  27  28  29 │ 30  31  32  33  34  35 │ │ LB5 LB4 LB3 LB2 LB1 LB0 │ RB0 RB1 RB2 RB3 RB4 RB5 │
  ╰───────────╮ 36  37  38 │ 39  40  41 ╭───────────╯ ╰───────────╮ LH2 LH1 LH0 │ RH0 RH1 RH2 ╭───────────╯
              ╰────────────┴────────────╯                         ╰─────────────┴─────────────╯             */

#pragma once

#define LT0  5  // left-top row
#define LT1  4
#define LT2  3
#define LT3  2
#define LT4  1
#define LT5  0

#define RT0  6  // right-top row
#define RT1  7
#define RT2  8
#define RT3  9
#define RT4 10
#define RT5 11

#define LM0 17  // left-middle row
#define LM1 16
#define LM2 15
#define LM3 14
#define LM4 13
#define LM5 12

#define RM0 18  // right-middle row
#define RM1 19
#define RM2 20
#define RM3 21
#define RM4 22
#define RM5 23

#define LB0 29  // left-bottom row
#define LB1 28
#define LB2 27
#define LB3 26
#define LB4 25
#define LB5 24

#define RB0 30  // right-bottom row
#define RB1 31
#define RB2 32
#define RB3 33
#define RB4 34
#define RB5 35

#define LH0 38  // left thumb keys
#define LH1 37
#define LH2 36

#define RH0 39  // right thumb keys
#define RH1 40
#define RH2 41


/ {
      behaviors {
        hml: home_row_mod_left {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            require-prior-idle-ms = <150>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            bindings = <&kp>, <&kp>;
            hold-trigger-key-positions = < 6 7 8 9 10 11 18 19 20 21 22 23 >; // List of keys on the right side of the keyboard
            hold-trigger-on-release;
        };
        hmr: home_row_mod_right {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            require-prior-idle-ms = <150>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            bindings = <&kp>, <&kp>;
            hold-trigger-key-positions = < 0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29 >; // List of keys on the left side of the keyboard
            hold-trigger-on-release;
        };
        combos {
            compatible = "zmk,combos";
            combo_esc {
                timeout-ms = <50>;
                key-positions = <0 1>;
                bindings = <&kp ESC>;
            };
            combo_lpar {
                timeout-ms = <50>;
                key-positions = <RT1 RT2>;
                bindings = <&kp LPAR>;
            };
            combo_rpar {
                timeout-ms = <50>;
                key-positions = <RT2 RT3>;
                bindings = <&kp RPAR>;
            };
            combo_lbkt {
                timeout-ms = <50>;
                key-positions = <RM1 RM2>;
                bindings = <&kp LBKT>;
            };
            combo_rbkt {
                timeout-ms = <50>;
                key-positions = <RM2 RM3>;
                bindings = <&kp RBKT>;
            };
            combo_lbrc {
                timeout-ms = <50>;
                key-positions = <RB1 RB2>;
                bindings = <&kp LBRC>;
            };
            combo_rbrc {
                timeout-ms = <50>;
                key-positions = <RB2 RB3>;
                bindings = <&kp RBRC>;
            };
            combo_lt {
                timeout-ms = <50>;
                key-positions = <RT0 RT1>;
                bindings = <&kp LT>;
            };
            combo_gt {
                timeout-ms = <50>;
                key-positions = <RM0 RM1>;
                bindings = <&kp GT>;
            };
        };

    };
    conditional_layers {
        compatible = "zmk,conditional-layers";

        tri_layer {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };

    keymap {
        compatible = "zmk,keymap";
// gasc
        default_layer {
            display-name = "def";
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BSPC |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | ALT | LWR | SPC |   | ENT | RSE  | GUI |
            bindings = <
&kp TAB    &kp Q  &kp W  &kp E         &kp R  &kp T          &kp Y    &kp U  &kp I      &kp O    &kp P     &kp BSPC
&kp LCTRL  &hml LGUI A  &hml LEFT_ALT S  &hml LSHFT D         &hml LCTRL F  &kp G          &kp H    &hmr LCTRL J  &hmr LSHFT K      &hmr LEFT_ALT L    &hmr LGUI SEMI  &kp SQT
&kp LSHFT  &kp Z  &kp X  &kp C         &kp V  &kp B          &kp N    &kp M  &kp COMMA  &kp DOT  &kp FSLH  &kp ESC
                         &kp LEFT_ALT  &lt 1 BSPC  &lt 4 SPACE    &kp RET  &mo 2  &kp LGUI
            >;
        };

        lower_layer {
            display-name = "lower";
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BSPC |
            // |      | Home| Up  | End | Del |     |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT | Left| Down|Right| BkSp|     |   |     |     |     |     |     |      |
            //                    | ALT | LWR | SPC |   | ENT | RSE  | GUI |

            bindings = <
&kp LA(TAB)  &kp N1          &kp N2          &kp N3           &kp N4    &kp N5       &kp N6   &kp N7  &kp N8    &kp N9   &kp N0   &kp BSPC
&trans       &mkp MB2        &mmv MOVE_UP    &mkp MB1         &kp DEL   &trans       &kp F1   &kp F2  &kp F3    &kp F4   &kp F5   &kp F6
&kp LSHFT    &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_RIGHT  &kp BSPC  &trans       &kp F7   &kp F8  &kp F9    &kp F10  &kp F11  &kp F12
                                             &trans           &trans    &kp SPACE    &kp RET  &trans  &kp LGUI
            >;
        };

        raise_layer {
            display-name = "raise";
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BSPC |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | ALT | LWR | SPC |   | ENT | RSE  | GUI |

            bindings = <
&kp TAB    &kp EXCL  &kp AT  &kp HASH  &kp DLLR  &kp PRCNT    &kp CARET  &kp AMPS   &kp ASTRK  &kp LPAR  &kp RPAR  &kp BSPC
&kp LCTRL  &trans    &trans  &trans    &trans    &trans       &kp MINUS  &kp EQUAL  &kp LBKT   &kp RBKT  &kp BSLH  &kp GRAVE
&kp LSHFT  &trans    &trans  &trans    &trans    &trans       &kp UNDER  &kp PLUS   &kp LBRC   &kp RBRC  &kp PIPE  &kp TILDE
                             &trans    &trans    &kp SPACE    &kp RET    &trans     &kp LGUI
            >;
        };

        adjust_layer {
            display-name = "adjust";
            // -----------------------------------------------------------------------------------------
            // |  F1  |  F2 |  F3 |  F4 |  F5 |  F6 |   |  F7 |  F8 |  F9 | F10 | F11 | bootloader |
            // | CTRL |BTNEX|BTPRE|OUTTO|     |BTCLR|   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | ALT | LWR | SPC |   | ENT | RSE  | GUI |

            bindings = <
&kp F1     &kp F2      &kp F3      &kp F4        &kp F5         &kp F6        &kp F7     &kp F8     &kp F9    &kp F10   &kp F11   &bootloader
&kp LCTRL  &bt BT_PRV  &bt BT_NXT  &out OUT_TOG  &out OUT_BLE   &bt BT_CLR    &kp MINUS  &kp EQUAL  &kp LBKT  &kp RBKT  &kp BSLH  &kp GRAVE
&kp LSHFT  &trans      &trans      &trans        &trans         &trans        &out OUT_BLE  &kp PLUS   &kp LBRC  &kp RBRC  &kp PIPE  &kp TILDE
                                   &trans        &trans         &kp SPACE     &kp RET    &trans     &kp LGUI
            >;
        };

        nav {
            display-name = "nav";
            bindings = <
&trans  &kp PG_UP &kp HOME  &kp UP    &kp END   &kp RET   &kp N7  &kp N8  &kp N9   &trans  &trans  &kp PRINTSCREEN
&trans  &kp PG_DN &kp LEFT  &kp DOWN  &kp RIGHT &kp BSPC  &kp N4  &kp N5  &kp N6   &trans  &trans  &trans
&trans  &kp BSPC  &trans    &kp DEL   &trans    &trans    &kp N1  &kp N2  &kp N3   &trans  &trans  &trans
                            &trans    &trans    &trans    &trans  &kp N0  &kp DOT
            >;
        };

        gaming {
            display-name = "game";
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BSPC |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | ALT | LWR | SPC |   | ENT | RSE  | GUI |

            bindings = <
&kp TAB    &kp Q  &kp W  &kp E         &kp R  &kp T        &kp Y    &kp U  &kp I      &kp O    &kp P     &kp BSPC
&kp LCTRL  &kp A  &kp S  &kp D         &kp F  &kp G        &kp H    &kp J  &kp K      &kp L    &kp SEMI  &kp SQT
&kp LSHFT  &kp Z  &kp X  &kp C         &kp V  &kp B        &kp N    &kp M  &kp COMMA  &kp DOT  &kp FSLH  &kp ESC
                         &kp LEFT_ALT  &mo 1  &kp SPACE    &kp RET  &mo 2  &kp LGUI
            >;
        };

        extra1 { status = "reserved"; };

        extra2 { status = "reserved"; };
    };
};
